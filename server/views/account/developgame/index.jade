extends ../../../layouts/account

block head
  title Live Joystick Lab
  link(rel="stylesheet", href="https://codemirror.net/2/lib/codemirror.css")
  script(src="https://codemirror.net/2/lib/codemirror.js")
  script(src="http://codemirror.net/2/mode/javascript/javascript.js")
  link(rel="stylesheet", href="https://codemirror.net/2/doc/docs.css")

block neck
  style.
    .myMainRow {
      background-color:#ffffff;
      margin-top:1%;
      height:#{data.divInfo.mainRowHeight};
      width:#{data.divInfo.mainRowWidth};
      float:left;
    }

    .myMainCol {
      background-color:#ffffff;
      height:100%;
      height:#{data.divInfo.mainColHeight};
      width:#{data.divInfo.mainColWidth};
      float:left;
    }
    .myLightSpacer {
      background-color:rgba(0,0,0,0.5);
      height:#{data.divInfo.lightShort};
      width:#{data.divInfo.lightShort};
      float:left;
      text-align:center;
      border-style:solid;
      border-width:1px;
    }
    .myTopLight {
      background-color:rgba(255,255,0,#{data.lightData.topLightAlpha});
      height:#{data.divInfo.lightShort};
      width:#{data.divInfo.lightLong};
      float:left;
      text-align:center;
      border-style:solid;
      border-width:1px;
    }
    .myLeftLight {
      background-color:rgba(255,255,0,#{data.lightData.leftLightAlpha});
      height:#{data.divInfo.lightLong};
      width:#{data.divInfo.lightShort};
      float:left;
      text-align:center;
      border-style:solid;
      border-width:1px;
    }
    #myImage {
      background-color:#d3d3d3;
      height:#{data.divInfo.imageHeight};
      width:#{data.divInfo.imageWidth};
      float:left;
      overflow:hidden;
      z-index:1;
    }
    #myVideo {
      background-color:#d3d3d3;
      width:100%;      
      float:left;
      z-index:1;
    }

    #myRightLight {
      background-color:rgba(255,255,0,#{data.lightData.rightLightAlpha});
      height:#{data.divInfo.lightLong};
      width:#{data.divInfo.lightShort};
      float:left;
      text-align:center;
      border-style:solid;
      border-width:1px;
      z-index:1;
    }
    #myBottomLight {
      background-color:rgba(255,255,0,#{data.lightData.bottomLightAlpha});
      height:#{data.divInfo.lightShort};
      width:#{data.divInfo.lightLong};
      float:left;
      text-align:center;
      border-style:solid;
      border-width:1px;
      z-index:1;
    }
    #myAside {
      background-color:#ffffff;
      /*height:#{data.divInfo.asideColHeight};
      width:#{data.divInfo.asideColWidth};*/
      height: 150px;
      width: 150px;
      float:left;
      z-index:1;
    }

    #myImage2 {
      background-color:#d3d3d3;
      height:#{data.divInfo.sideImageHeight};
      width:#{data.divInfo.sideImageWidth};
      float:left;
    }
    #myJoystick {
      background-color:#A0A0A0;
      /*height:#{data.divInfo.joystickHeight};
      width:#{data.divInfo.joystickWidth};*/
      height: 150px;
      width: 150px;
      float:left;
    }

    #myScalebar {
      //- background-color:rgba(0,0,0,0.0);
      position:relative;
      height:8%;
      width:#{data.lengthScale100um};
      text-align:center;
      border-style:solid;
      border-width:0px;
      top:90%;
      left:80%;
      z-index:10;
    }

    #myScale {
      background-color:rgba(255,255,0,1);
      position:relative;
      width:100%;
      height:10px;
      text-align:center;
      border-style:solid;
      border-width:1px;
      z-index:11;
    }

    #myScaleText {
      position:absolute;
      z-index:11;
      top:55%;
      left:15%;
      font-size:16px;
      font-weight:bold;
      color:rgb(0,0,0);
    }

    .canvas-joystick-off {background-color:#A0A0A0;}
    .canvas-joystick-on {background-color:#66b2ff;}

  
    *.unselectable {
        -moz-user-select: -moz-none;
        -khtml-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .CodeMirror {
        border: 1px solid #eee;
    }
    .CodeMirror-scroll {
      height: auto;
      overflow-y: hidden;
      overflow-x: auto;
    }

block feet
  script(src='/views/account/developgame/index.min.js?#{cacheBreaker}')
  script(src="/views/account/developgame/Canvas_Joystick.js")
  script(src='/views/account/developgame/socket-client.js')
  script(src='/views/account/developgame/game/game.js')
  

block body
  body(onload='pageDidLoad()')
    div#listener
      embed(id="image_proc", width=0, height=0, src="/views/account/developgame/game/ImageProc/image_proc.nmf", type="application/x-pnacl")

    div.row
      div.col-xs-7
        font(color='purple')
          |function&nbsp;
        |MyBioticGame() {
        br
        br

        div.row
          div.col-xs-12
            div(style='margin-left:3%;')
              textarea.codeArea#txtCodeVariables
                |this.currLED = LED.RIGHT;
                |this.possibleLEDs = [LED.UP, LED.DOWN, LED.RIGHT, LED.LEFT];
                |this.instructions = "Guess which LED is currently shining. Press 'W'" +
                |&nbsp;&nbsp;&nbsp;&nbsp;"for top LED, 'A' for left LED, 'S' for bottom LED, and" +
                |&nbsp;&nbsp;&nbsp;&nbsp;"'D' for right LED.";
                |this.score = 1;
        br

        |&nbsp;&nbsp;&nbsp;&nbsp;
        font(color='#0F6BA0')
          |this
        |.run = 
        font(color='purple')
          |function
        |() {
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        div.row
          div.col-xs-1
          div.col-xs-11
            textarea#txtCodeRun
              |setLED(this.currLED, 999);
              |if (this.score >= 10) {
              |&nbsp;&nbsp;&nbsp;&nbsp;finishGame();
              |}
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;};
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        br

        |&nbsp;&nbsp;&nbsp;&nbsp;
        font(color='#0F6BA0')
          |this
        |.startGame = 
        font(color='purple')
          |function
        |() {
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        div.row
          div.col-xs-1
          div.col-xs-11
            textarea.codeArea#txtCodeStart
              |setJoystickView(false);
              |setLevel(1);
              |setTextPerLevel(1, this.instructions);
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;};
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        br

        |&nbsp;&nbsp;&nbsp;&nbsp;
        font(color='#0F6BA0')
          |this
        |.endGame = 
        font(color='purple')
          |function
        |() {
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        div.row
          div.col-xs-1
          div.col-xs-11
            textarea.codeArea#txtCodeEnd
              |alert('Guess correctly 10 times, congrats!');
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;};
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        br

        |&nbsp;&nbsp;&nbsp;&nbsp;
        font(color='#0F6BA0')
          |this
        |.onJoystickChange = 
        font(color='purple')
          |function
        |(
        font(color='blue')
          |angle, intensity
        |) {
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        div.row
          div.col-xs-1
          div.col-xs-11
            textarea.codeArea#txtCodeJoystick
              |//console.log('Joystick changed!');
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;};
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        br

        |&nbsp;&nbsp;&nbsp;&nbsp;
        font(color='#0F6BA0')
          |this
        |.onKeypress = 
        font(color='purple')
          |function
        |(
        font(color='blue')
          |key
        |) {
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        div.row
          div.col-xs-1
          div.col-xs-11
            textarea.codeArea#txtCodeKeypress
              |switch(key) {
              |&nbsp;&nbsp;&nbsp;&nbsp;case KEY.W:
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.currLED == LED.UP) {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Correct!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.score += 1;
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.currLED = this.possibleLEDs[Math.floor(Math.random() * this.possibleLEDs.length)];
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Wrong!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
              |&nbsp;&nbsp;&nbsp;&nbsp;case KEY.A:
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.currLED == LED.LEFT) {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Correct!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.score += 1;
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.currLED = this.possibleLEDs[Math.floor(Math.random() * this.possibleLEDs.length)];
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Wrong!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
              |&nbsp;&nbsp;&nbsp;&nbsp;case KEY.S:
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.currLED == LED.DOWN) {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Correct!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.score += 1;
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.currLED = this.possibleLEDs[Math.floor(Math.random() * this.possibleLEDs.length)];
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Wrong!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
              |&nbsp;&nbsp;&nbsp;&nbsp;case KEY.D:
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (this.currLED == LED.RIGHT) {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Correct!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.score += 1;
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.currLED = this.possibleLEDs[Math.floor(Math.random() * this.possibleLEDs.length)];
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('Wrong!');
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
              |&nbsp;&nbsp;&nbsp;&nbsp;default:
              |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
              |}
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;};
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        br
        |};
        br
        br
        button.btn.btn-success#btnUpdateRun(type="update",value="update") Update Code
        
      div.col-xs-5
        div.row
          div.col-xs-12
            button.btn.btn-success#btnStartGame(type="update",value="update") Play Game
        br
        div.row
          div.col-xs-5#myAside.unselectable(name='myAside')
            div#myJoystick.canvas-joystick-off(name='myJoystick')
          div.col-xs-1
          div.col-xs-6
            |<u>Level 
            b#level
              |1
            |: </u>
            p#levelText
              |Call the setLevelText function to change this text!
        br
        canvas(id="display", width="640", height="480", hidden="true")
        canvas(id="processed", width="640", height="480")
        h3#labTimeLeftLabel.unselectable(name=data.timeLeftInLab.jadeName) #{data.timeLeftInLab.value}
        button.btn.btn-success#btnSaveGame(type="save",value="save", disabled) Save Game
        //- h2
        //-   |Status 
        //-   code(id="statusField")
        //-     |Loading...
    
    div.modal.fade(role="dialog")

    script(type='text/template',id="tmpl-survey")
      div.modal-dialog(role="document")
        div.modal-content
          div.modal-header
              h4.modal-title Send us your feedback
          div.modal-body
            .form-group
                label Rate your experience
                div
                    input.form-control.rating(type="hidden",name="rating")
            .form-group
                label Note for support team
                textarea.form-control(rows="5",style="width:520px", name="notes")
          div.modal-footer
            button.btn.btn-primary#btn-submit(type="submit",value="submit") Submit  
            button.btn.btn-default#btn-close(type="button",value="close", data-dismiss="modal") Close  
      

    script(type='text/lab', id='data-user') !{data.user}
    script(type='text/lab', id='data-bpu') !{data.bpu}
    script(type='text/lab', id='data-bpuExp') !{data.bpuExp}
    script(type='text/template', id='data-session') !{data.session}
    script(type='text/lab', id='data-setLedsObj') !{data.setLedsObj}

    script(src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js", type="text/javascript")
    script(src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js", type="text/javascript")
    script(src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js", type="text/javascript")



